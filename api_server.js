const axios = require("axios").default;
const zlib = require("zlib");
const express = require("express");
const bodyParser = require("body-parser");
const querystring = require("querystring");
const app = express();
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
const port = 3000;
const cors = require("cors");
app.use(cors({ origin: ["http://localhost:8080"] }));

const nistModifiedURI =
  "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-modified.json.gz";
const nistCveURIList = {
  modified:
    "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-modified.json.gz",
  2022: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2022.json.gz",
  2021: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2021.json.gz",
  2020: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2020.json.gz",
  2019: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2019.json.gz",
  2018: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2018.json.gz",
  2017: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2017.json.gz",
  2016: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2016.json.gz",
  2015: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2015.json.gz",
  2014: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2014.json.gz",
  2013: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2013.json.gz",
  2012: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2012.json.gz",
  2011: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2011.json.gz",
  2010: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2010.json.gz",
  2009: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2009.json.gz",
  2008: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2008.json.gz",
  2007: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2007.json.gz",
  2006: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2006.json.gz",
  2005: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2005.json.gz",
  2004: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2004.json.gz",
  2003: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2003.json.gz",
  2002: "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-2002.json.gz",
};

(async () => {
  // function to pull CVE data per year
  const pullData = async (uri) => {
    const { data } = await axios.get(uri, {
      responseType: "arraybuffer",
      decompress: true,
    });
    let zlibPromise = (buffer) => {
      return new Promise((resolve, reject) => {
        zlib.gunzip(data, function (err, output) {
          output ? resolve(output.toString("utf8")) : reject(err);
        });
      }).then((response) => JSON.parse(response));
    };
    return zlibPromise(data);
  };

  // current years that the application will show vulnerabilities for
  const years = ["2022"];
  allCVEs = [];

  for await (const year of years) {
    const { CVE_Items } = await pullData(nistCveURIList[year]);
    const yearResults = CVE_Items.map((result) => ({
      CVE: result.cve.CVE_data_meta.ID,
      description: result.cve.description?.description_data[0]?.value,
      score: result.impact.baseMetricV3?.cvssV3?.baseScore,
      severity: result.impact.baseMetricV3?.cvssV3?.baseSeverity,
      exploitability: result.impact.baseMetricV3?.exploitabilityScore,
      impactScore: result.impact.baseMetricV3?.impactScore,
    }));

    allCVEs = [...allCVEs, ...yearResults];
  }

  app.get("/", async (req, res) => {
    severity = req.query._severity;
    limit = req.query._limit ?? 1000; //default limit to 1000 if not specified

    //if severity filter applied, begin filter otherwise this step is unecessary
    if (severity) {
      results = allCVEs.filter((cve) => cve.severity === severity);
    } else {
      results = allCVEs;
    }
    //limit to requested results (default: 1000)
    results = results.slice(0, limit).reverse(); // sort showing newest first

    res.json(results);
  });

  app.listen(port, () => {
    console.log("Server started on port: " + port);
  });
})();
